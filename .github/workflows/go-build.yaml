name: Go

on:
  workflow_dispatch:
  release:
    types: [published]
  push:

jobs:
  build:
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        include:
          - goos: darwin
            goarch: arm64
            platform: ios
            target: ios
          - goos: darwin
            goarch: amd64
            platform: ios-simulator
            target: ios

    runs-on: macos-latest
    env:
      GOOS: ${{ matrix.goos }}
      GOARCH: ${{ matrix.goarch }}
      CGO_ENABLED: 1
    steps:
      - name: Checkout codebase
        uses: actions/checkout@v4

      - name: Show workflow information
        run: |
          export _NAME=$GOOS-$GOARCH
          if [ ! -z "${{ matrix.platform }}" ]; then
            export _NAME=$_NAME-${{ matrix.platform }}
          fi
          echo "GOOS: $GOOS, GOARCH: $GOARCH, PLATFORM: ${{ matrix.platform }}, RELEASE_NAME: $_NAME"
          echo "ASSET_NAME=$_NAME" >> $GITHUB_ENV
          echo "REF=${GITHUB_SHA::6}" >> $GITHUB_ENV

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22'
          check-latest: true

      - name: Setup Xcode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: latest-stable

      - name: Build iOS Framework
        run: |
          # ایجاد دایرکتوری‌های مورد نیاز
          mkdir -p build/ios
          
          # ساخت کتابخانه استاتیک و header
          go build -v -buildmode=c-archive -trimpath \
            -ldflags "-s -w -buildid= -X main.version=${{ github.ref }}" \
            -o build/ios/libwarp.a ./cmd/warp-plus
          
          # نمایش محتویات دایرکتوری برای debug
          echo "Contents of build/ios directory:"
          ls -la build/ios/
          
          # ایجاد ساختار فریمورک
          mkdir -p build/ios/Warp.framework/Headers
          
          # کپی فایل‌ها به مسیر درست
          cp build/ios/libwarp.a build/ios/Warp.framework/Warp
          
          # بررسی وجود فایل header
          if [ -f "build/ios/libwarp.h" ]; then
            cp build/ios/libwarp.h build/ios/Warp.framework/Headers/Warp.h
          else
            echo "Header file not found. Searching for it..."
            find build -name "*.h"
          fi
          
          # نمایش محتویات فریمورک
          echo "Contents of Warp.framework directory:"
          ls -la build/ios/Warp.framework/
          
          # ساخت فایل Info.plist برای فریمورک
          cat > build/ios/Warp.framework/Info.plist << EOF
          <?xml version="1.0" encoding="UTF-8"?>
          <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
          <plist version="1.0">
          <dict>
              <key>CFBundleDevelopmentRegion</key>
              <string>en</string>
              <key>CFBundleExecutable</key>
              <string>Warp</string>
              <key>CFBundleIdentifier</key>
              <string>org.bepass.warp</string>
              <key>CFBundleInfoDictionaryVersion</key>
              <string>6.0</string>
              <key>CFBundleName</key>
              <string>Warp</string>
              <key>CFBundlePackageType</key>
              <string>FMWK</string>
              <key>CFBundleShortVersionString</key>
              <string>1.0</string>
              <key>CFBundleVersion</key>
              <string>1</string>
              <key>MinimumOSVersion</key>
              <string>12.0</string>
          </dict>
          </plist>
          EOF
          
          # ساخت فایل zip
          cd build/ios
          zip -r ../../warp-plus_${{ env.ASSET_NAME }}.zip Warp.framework

      - name: Upload iOS Framework
        uses: actions/upload-artifact@v4
        with:
          name: warp-plus_${{ env.ASSET_NAME }}_${{ env.REF }}
          path: build/ios/Warp.framework

      - name: Upload binaries to release
        uses: svenstaro/upload-release-action@v2
        if: github.event_name == 'release'
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ./warp-plus_${{ env.ASSET_NAME }}.zip*
          tag: ${{ github.ref }}
          file_glob: true
